<?php

namespace ContainerZ2Ra6df;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_C_9TFCJService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.c.9TFCJ' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.c.9TFCJ'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\ApiController::cgiCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController::slpCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController::station' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController::tempCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController::visCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController::windAngleCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController::wind_speedCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
            'App\\Controller\\ApiController:cgiCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController:slpCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController:station' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController:tempCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController:visCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController:windAngleCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'App\\Controller\\ApiController:wind_speedCalcul' => ['privates', '.service_locator.1QZwlX8', 'get_ServiceLocator_1QZwlX8Service', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
        ], [
            'App\\Controller\\ApiController::cgiCalcul' => '?',
            'App\\Controller\\ApiController::slpCalcul' => '?',
            'App\\Controller\\ApiController::station' => '?',
            'App\\Controller\\ApiController::tempCalcul' => '?',
            'App\\Controller\\ApiController::visCalcul' => '?',
            'App\\Controller\\ApiController::windAngleCalcul' => '?',
            'App\\Controller\\ApiController::wind_speedCalcul' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::terminate' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'kernel::terminate' => '?',
            'App\\Controller\\ApiController:cgiCalcul' => '?',
            'App\\Controller\\ApiController:slpCalcul' => '?',
            'App\\Controller\\ApiController:station' => '?',
            'App\\Controller\\ApiController:tempCalcul' => '?',
            'App\\Controller\\ApiController:visCalcul' => '?',
            'App\\Controller\\ApiController:windAngleCalcul' => '?',
            'App\\Controller\\ApiController:wind_speedCalcul' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:terminate' => '?',
        ]);
    }
}
